import telebot
from telebot import types
import os
from dotenv import load_dotenv
from datetime import datetime, timedelta

load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
bot = telebot.TeleBot(BOT_TOKEN)

user_states = {}
user_reports = {}

# === /start –∞–±–æ /–∑–≤—ñ—Ç ===
@bot.message_handler(commands=['start', '–∑–≤—ñ—Ç'])
def start_report(message):
    chat_id = message.chat.id
    user_reports[chat_id] = {"–ª–æ–∫–∞—Ü—ñ—è": None}
    user_states[chat_id] = "–≤–∏–±—ñ—Ä_–ª–æ–∫–∞—Ü—ñ—ó"

    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton("üìç –†—É—Å—å–∫–∞, 3", callback_data="–ª–æ–∫–∞—Ü—ñ—è_—Ä—É—Å—å–∫–∞"),
        types.InlineKeyboardButton("üìç –õ–µ–ø–∫–æ–≥–æ, 6", callback_data="–ª–æ–∫–∞—Ü—ñ—è_–ª–µ–ø–∫–æ–≥–æ")
    )
    bot.send_message(chat_id, "–û–±–µ—Ä—ñ—Ç—å –ª–æ–∫–∞—Ü—ñ—é –¥–ª—è –∑–≤—ñ—Ç—É:", reply_markup=markup)

# === –ú–µ–Ω—é ===
def show_main_menu(chat_id):
    markup = types.InlineKeyboardMarkup()
    markup.row(
        types.InlineKeyboardButton("ü•ß –ì–æ—Ç–æ–≤–µ", callback_data="–≥–æ—Ç–æ–≤–µ"),
        types.InlineKeyboardButton("ü•∂ –ó–∞–º–æ—Ä–æ–∑–∫–∞", callback_data="–∑–∞–º–æ—Ä–æ–∑–∫–∞")
    )
    markup.row(
        types.InlineKeyboardButton("ü•õ –ú–æ–ª–æ–∫–æ", callback_data="–º–æ–ª–æ–∫–æ"),
        types.InlineKeyboardButton("üíß –ù–∞–ø–æ—ó", callback_data="–Ω–∞–ø–æ—ó")
    )
    markup.row(
        types.InlineKeyboardButton("üßÉ –°–æ–∫–∏", callback_data="—Å–æ–∫–∏"),
        types.InlineKeyboardButton("‚òïÔ∏è –ö–∞–≤–∞ / –ú–∞—Ç—á–∞ / –ß–∞—ó", callback_data="–∫–∞–≤–∞")
    )
    markup.row(
        types.InlineKeyboardButton("üì¶ –†–æ–∑—Ö—ñ–¥–Ω–∏–∫–∏", callback_data="—Ä–æ–∑—Ö—ñ–¥–Ω–∏–∫–∏"),
        types.InlineKeyboardButton("‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç–∏ –∑–≤—ñ—Ç", callback_data="–∑–∞–≤–µ—Ä—à–∏—Ç–∏")
    )
    bot.send_message(chat_id, "–ó —á–æ–≥–æ –ø–æ—á–Ω–µ–º–æ?", reply_markup=markup)

# === –û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–æ–∫ ===
@bot.callback_query_handler(func=lambda call: True)
def callback_handler(call):
    chat_id = call.message.chat.id
    data = call.data

    if data.startswith("–ª–æ–∫–∞—Ü—ñ—è_"):
        –ª–æ–∫–∞—Ü—ñ—è = "–†—É—Å—å–∫–∞, 3" if data == "–ª–æ–∫–∞—Ü—ñ—è_—Ä—É—Å—å–∫–∞" else "–õ–µ–ø–∫–æ–≥–æ, 6"
        user_reports[chat_id]["–ª–æ–∫–∞—Ü—ñ—è"] = –ª–æ–∫–∞—Ü—ñ—è
        user_states[chat_id] = "main_menu"
        show_main_menu(chat_id)
        return

    if data == "–≥–æ—Ç–æ–≤–µ":
        bot.send_message(chat_id, "–†–æ–∑–¥—ñ–ª '–ì–æ—Ç–æ–≤–µ' —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.")
    elif data == "–∑–∞–º–æ—Ä–æ–∑–∫–∞":
        bot.send_message(chat_id, "–†–æ–∑–¥—ñ–ª '–ó–∞–º–æ—Ä–æ–∑–∫–∞' —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.")
    elif data == "–º–æ–ª–æ–∫–æ":
        bot.send_message(chat_id, "–†–æ–∑–¥—ñ–ª '–ú–æ–ª–æ–∫–æ' —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.")
    elif data == "–Ω–∞–ø–æ—ó":
        bot.send_message(chat_id, "–†–æ–∑–¥—ñ–ª '–ù–∞–ø–æ—ó' —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.")
    elif data == "—Å–æ–∫–∏":
        bot.send_message(chat_id, "–†–æ–∑–¥—ñ–ª '–°–æ–∫–∏' —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.")
    elif data == "–∫–∞–≤–∞":
        bot.send_message(chat_id, "–†–æ–∑–¥—ñ–ª '–ö–∞–≤–∞ / –ú–∞—Ç—á–∞ / –ß–∞—ó' —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.")
    elif data == "—Ä–æ–∑—Ö—ñ–¥–Ω–∏–∫–∏":
        bot.send_message(chat_id, "–†–æ–∑–¥—ñ–ª '–†–æ–∑—Ö—ñ–¥–Ω–∏–∫–∏' —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.")
    elif data == "–∑–∞–≤–µ—Ä—à–∏—Ç–∏":
        # –õ—å–≤—ñ–≤—Å—å–∫–∏–π —á–∞—Å
        now = datetime.utcnow() + timedelta(hours=3)
        day_name = {
            'Monday': '–ø–æ–Ω–µ–¥—ñ–ª–æ–∫',
            'Tuesday': '–≤—ñ–≤—Ç–æ—Ä–æ–∫',
            'Wednesday': '—Å–µ—Ä–µ–¥–∞',
            'Thursday': '—á–µ—Ç–≤–µ—Ä',
            'Friday': '–ø º—è—Ç–Ω–∏—Ü—è',
            'Saturday': '—Å—É–±–æ—Ç–∞',
            'Sunday': '–Ω–µ–¥—ñ–ª—è'
        }[now.strftime('%A')]
        –¥–∞—Ç–∞ = now.strftime(f"üóìÔ∏è %d.%m.%Y, {day_name}")

        –ª–æ–∫–∞—Ü—ñ—è = user_reports.get(chat_id, {}).get("–ª–æ–∫–∞—Ü—ñ—è", "–õ–æ–∫–∞—Ü—ñ—è –Ω–µ –≤–∫–∞–∑–∞–Ω–∞")
        header = f"{–¥–∞—Ç–∞}\nüìç {–ª–æ–∫–∞—Ü—ñ—è}"
        bot.send_message(chat_id, f"{header}\n\n(–ó–≤—ñ—Ç —â–µ –Ω–µ –∑–∞–ø–æ–≤–Ω–µ–Ω–æ.)")
    else:
        bot.send_message(chat_id, "–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞.")

# === –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ===
bot.polling()
