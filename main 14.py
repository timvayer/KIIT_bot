import telebot
from telebot import types
import os
from dotenv import load_dotenv
from datetime import datetime

load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
bot = telebot.TeleBot(BOT_TOKEN)

# === –°–¢–ê–ù–ò –ö–û–†–ò–°–¢–£–í–ê–ß–Ü–í ===
user_states = {}
user_reports = {}

# === –í–ò–ë–Ü–† –õ–û–ö–ê–¶–Ü–á ===
@bot.message_handler(commands=['start', '–∑–≤—ñ—Ç'])
def start_report(message):
    chat_id = message.chat.id
    user_reports[chat_id] = {"–ª–æ–∫–∞—Ü—ñ—è": None}
    user_states[chat_id] = "–≤–∏–±—ñ—Ä_–ª–æ–∫–∞—Ü—ñ—ó"

    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton("üìç –†—É—Å—å–∫–∞, 3", callback_data="–ª–æ–∫–∞—Ü—ñ—è_—Ä—É—Å—å–∫–∞"),
        types.InlineKeyboardButton("üìç –õ–µ–ø–∫–æ–≥–æ, 6", callback_data="–ª–æ–∫–∞—Ü—ñ—è_–ª–µ–ø–∫–æ–≥–æ")
    )
    bot.send_message(chat_id, "–û–±–µ—Ä—ñ—Ç—å –ª–æ–∫–∞—Ü—ñ—é –¥–ª—è –∑–≤—ñ—Ç—É:", reply_markup=markup)

# === –°–¢–ê–†–¢ ===
@bot.message_handler(commands=['start', '–∑–≤—ñ—Ç'])
def start_report(message):
    chat_id = message.chat.id
    user_reports[chat_id] = {}
    user_states[chat_id] = "main_menu"

    markup = types.InlineKeyboardMarkup()
    markup.row(
        types.InlineKeyboardButton("ü•ß –ì–æ—Ç–æ–≤–µ", callback_data="–≥–æ—Ç–æ–≤–µ"),
        types.InlineKeyboardButton("ü•∂ –ó–∞–º–æ—Ä–æ–∑–∫–∞", callback_data="–∑–∞–º–æ—Ä–æ–∑–∫–∞")
    )
    markup.row(
        types.InlineKeyboardButton("ü•õ –ú–æ–ª–æ–∫–æ", callback_data="–º–æ–ª–æ–∫–æ"),
        types.InlineKeyboardButton("üíß –ù–∞–ø–æ—ó", callback_data="–Ω–∞–ø–æ—ó")
    )
    markup.row(
        types.InlineKeyboardButton("üßÉ –°–æ–∫–∏", callback_data="—Å–æ–∫–∏"),
        types.InlineKeyboardButton("‚òïÔ∏è –ö–∞–≤–∞ / –ú–∞—Ç—á–∞ / –ß–∞—ó", callback_data="–∫–∞–≤–∞")
    )
    markup.row(
        types.InlineKeyboardButton("üì¶ –†–æ–∑—Ö—ñ–¥–Ω–∏–∫–∏", callback_data="—Ä–æ–∑—Ö—ñ–¥–Ω–∏–∫–∏"),
        types.InlineKeyboardButton("‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç–∏ –∑–≤—ñ—Ç", callback_data="–∑–∞–≤–µ—Ä—à–∏—Ç–∏")
    )
    markup.add(types.InlineKeyboardButton("ü•∂ –ó–∞–º–æ—Ä–æ–∑–∫–∞", callback_data="–∑–∞–º–æ—Ä–æ–∑–∫–∞"))
    markup.add(types.InlineKeyboardButton("ü•õ –ú–æ–ª–æ–∫–æ", callback_data="–º–æ–ª–æ–∫–æ"))
    markup.add(types.InlineKeyboardButton("üíß –ù–∞–ø–æ—ó", callback_data="–Ω–∞–ø–æ—ó"))
    markup.add(types.InlineKeyboardButton("üßÉ –°–æ–∫–∏", callback_data="—Å–æ–∫–∏"))
    markup.add(types.InlineKeyboardButton("‚òïÔ∏è –ö–∞–≤–∞ / –ú–∞—Ç—á–∞ / –ß–∞—ó", callback_data="–∫–∞–≤–∞"))
    markup.add(types.InlineKeyboardButton("üì¶ –†–æ–∑—Ö—ñ–¥–Ω–∏–∫–∏", callback_data="—Ä–æ–∑—Ö—ñ–¥–Ω–∏–∫–∏"))
    markup.add(types.InlineKeyboardButton("‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç–∏ –∑–≤—ñ—Ç", callback_data="–∑–∞–≤–µ—Ä—à–∏—Ç–∏"))

    bot.send_message(chat_id, "–ó —á–æ–≥–æ –ø–æ—á–Ω–µ–º–æ?", reply_markup=markup)

# === –ü–ï–†–ï–•–û–ü–õ–ï–ù–ù–Ø –ö–ù–û–ü–û–ö ===
def show_main_menu(chat_id):
    markup = types.InlineKeyboardMarkup()
    markup.row(
        types.InlineKeyboardButton("ü•ß –ì–æ—Ç–æ–≤–µ", callback_data="–≥–æ—Ç–æ–≤–µ"),
        types.InlineKeyboardButton("ü•∂ –ó–∞–º–æ—Ä–æ–∑–∫–∞", callback_data="–∑–∞–º–æ—Ä–æ–∑–∫–∞")
    )
    markup.row(
        types.InlineKeyboardButton("ü•õ –ú–æ–ª–æ–∫–æ", callback_data="–º–æ–ª–æ–∫–æ"),
        types.InlineKeyboardButton("üíß –ù–∞–ø–æ—ó", callback_data="–Ω–∞–ø–æ—ó")
    )
    markup.row(
        types.InlineKeyboardButton("üßÉ –°–æ–∫–∏", callback_data="—Å–æ–∫–∏"),
        types.InlineKeyboardButton("‚òïÔ∏è –ö–∞–≤–∞ / –ú–∞—Ç—á–∞ / –ß–∞—ó", callback_data="–∫–∞–≤–∞")
    )
    markup.row(
        types.InlineKeyboardButton("üì¶ –†–æ–∑—Ö—ñ–¥–Ω–∏–∫–∏", callback_data="—Ä–æ–∑—Ö—ñ–¥–Ω–∏–∫–∏"),
        types.InlineKeyboardButton("‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç–∏ –∑–≤—ñ—Ç", callback_data="–∑–∞–≤–µ—Ä—à–∏—Ç–∏")
    )
    markup.add(types.InlineKeyboardButton("ü•∂ –ó–∞–º–æ—Ä–æ–∑–∫–∞", callback_data="–∑–∞–º–æ—Ä–æ–∑–∫–∞"))
    markup.add(types.InlineKeyboardButton("ü•õ –ú–æ–ª–æ–∫–æ", callback_data="–º–æ–ª–æ–∫–æ"))
    markup.add(types.InlineKeyboardButton("üíß –ù–∞–ø–æ—ó", callback_data="–Ω–∞–ø–æ—ó"))
    markup.add(types.InlineKeyboardButton("üßÉ –°–æ–∫–∏", callback_data="—Å–æ–∫–∏"))
    markup.add(types.InlineKeyboardButton("‚òïÔ∏è –ö–∞–≤–∞ / –ú–∞—Ç—á–∞ / –ß–∞—ó", callback_data="–∫–∞–≤–∞"))
    markup.add(types.InlineKeyboardButton("üì¶ –†–æ–∑—Ö—ñ–¥–Ω–∏–∫–∏", callback_data="—Ä–æ–∑—Ö—ñ–¥–Ω–∏–∫–∏"))
    markup.add(types.InlineKeyboardButton("‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç–∏ –∑–≤—ñ—Ç", callback_data="–∑–∞–≤–µ—Ä—à–∏—Ç–∏"))
    bot.send_message(chat_id, "–ó —á–æ–≥–æ –ø–æ—á–Ω–µ–º–æ?", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: True)
def callback_handler(call):
    chat_id = call.message.chat.id
    data = call.data

    if data.startswith("–ª–æ–∫–∞—Ü—ñ—è_"):
        –ª–æ–∫–∞—Ü—ñ—è = "–†—É—Å—å–∫–∞, 3" if data == "–ª–æ–∫–∞—Ü—ñ—è_—Ä—É—Å—å–∫–∞" else "–õ–µ–ø–∫–æ–≥–æ, 6"
        user_reports[chat_id]["–ª–æ–∫–∞—Ü—ñ—è"] = –ª–æ–∫–∞—Ü—ñ—è
        user_states[chat_id] = "main_menu"
        show_main_menu(chat_id)
        return

    chat_id = call.message.chat.id
    data = call.data

    if data == "–≥–æ—Ç–æ–≤–µ":
        bot.send_message(chat_id, "–†–æ–∑–¥—ñ–ª '–ì–æ—Ç–æ–≤–µ' —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.")
    elif data == "–∑–∞–º–æ—Ä–æ–∑–∫–∞":
        bot.send_message(chat_id, "–†–æ–∑–¥—ñ–ª '–ó–∞–º–æ—Ä–æ–∑–∫–∞' —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.")
    elif data == "–º–æ–ª–æ–∫–æ":
        bot.send_message(chat_id, "–†–æ–∑–¥—ñ–ª '–ú–æ–ª–æ–∫–æ' —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.")
    elif data == "–Ω–∞–ø–æ—ó":
        bot.send_message(chat_id, "–†–æ–∑–¥—ñ–ª '–ù–∞–ø–æ—ó' —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.")
    elif data == "—Å–æ–∫–∏":
        bot.send_message(chat_id, "–†–æ–∑–¥—ñ–ª '–°–æ–∫–∏' —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.")
    elif data == "–∫–∞–≤–∞":
        bot.send_message(chat_id, "–†–æ–∑–¥—ñ–ª '–ö–∞–≤–∞ / –ú–∞—Ç—á–∞ / –ß–∞—ó' —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.")
    elif data == "—Ä–æ–∑—Ö—ñ–¥–Ω–∏–∫–∏":
        bot.send_message(chat_id, "–†–æ–∑–¥—ñ–ª '–†–æ–∑—Ö—ñ–¥–Ω–∏–∫–∏' —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.")
    elif data == "–∑–∞–≤–µ—Ä—à–∏—Ç–∏":
        uk_weekdays = {
    'Monday': '–ø–æ–Ω–µ–¥—ñ–ª–æ–∫',
    'Tuesday': '–≤—ñ–≤—Ç–æ—Ä–æ–∫',
    'Wednesday': '—Å–µ—Ä–µ–¥–∞',
    'Thursday': '—á–µ—Ç–≤–µ—Ä',
    'Friday': '–ø º—è—Ç–Ω–∏—Ü—è',
    'Saturday': '—Å—É–±–æ—Ç–∞',
    'Sunday': '–Ω–µ–¥—ñ–ª—è'
}
today_dt = datetime.now()
day_name = uk_weekdays[today_dt.strftime('%A')]
today = today_dt.strftime(f"üóìÔ∏è %d.%m.%Y, {day_name}")
        header = f"{today}\nüìç –†—É—Å—å–∫–∞, 3"
        bot.send_message(chat_id, f"{header}\n\n(–ó–≤—ñ—Ç —â–µ –Ω–µ –∑–∞–ø–æ–≤–Ω–µ–Ω–æ.)")
    else:
        bot.send_message(chat_id, "–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞.")

# === –ó–ê–ü–£–°–ö ===
bot.polling()

# === –ü–∏—Ä–æ–≥–∏ –¥–ª—è –±–ª–æ–∫—É "–ì–æ—Ç–æ–≤–µ" ===
pies_list = {
    "üçóüçÖüßÄ": "–ö—É—Ä–∫–∞-—Ç–æ–º–∞—Ç–∏-—Å–∏—Ä",
    "üçóüççüßÄ": "–ö—É—Ä–∫–∞-–∞–Ω–∞–Ω–∞—Å-—Å–∏—Ä",
    "üçóüçÑüßÄ": "–ö—É—Ä–∫–∞-–≥—Ä–∏–±–∏-—Å–∏—Ä",
    "üêÑüßÄ": "–¢–µ–ª—è—Ç–∏–Ω–∞-—Å–∏—Ä",
    "ü¶Éü´ë": "–Ü–Ω–¥–∏–∫-—Å–æ–ª–æ–¥–∫–∏–π –ø–µ—Ä–µ—Ü—å",
    "üßÖ": "–¶–∏–±—É–ª–µ–≤–∏–π",
    "üçÑüßÄ": "–ì—Ä–∏–±–∏-—Å–∏—Ä",
    "üßÄüçÉ": "–°–∏—Ä-—à–ø–∏–Ω–∞—Ç",
    "üßÄ": "–°—ñ–º —Å–∏—Ä—ñ–≤",
    "üçíü´ê": "–í–∏—à–Ω—è-–ª–æ—Ö–∏–Ω–∞",
    "üçíüßÄ": "–í–∏—à–Ω—è-—Å–∏—Ä"
}

@bot.callback_query_handler(func=lambda call: call.data == "–≥–æ—Ç–æ–≤–µ")
def handle_gotove(call):
    chat_id = call.message.chat.id
    user_states[chat_id] = "–≥–æ—Ç–æ–≤–µ_–∫–∞—Ç–µ–≥–æ—Ä—ñ—è"

    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("ü•ß –ü–∏—Ä–æ–≥–∏", callback_data="–≥–æ—Ç–æ–≤–µ_–ø–∏—Ä–æ–≥–∏"))
    markup.add(types.InlineKeyboardButton("ü•ü –ü–∏—Ä—ñ–∂–∫–∏", callback_data="–≥–æ—Ç–æ–≤–µ_–ø–∏—Ä—ñ–∂–∫–∏"))
    markup.add(types.InlineKeyboardButton("ü•ß –ì–∞–ª–µ—Ç–∏", callback_data="–≥–æ—Ç–æ–≤–µ_–≥–∞–ª–µ—Ç–∏"))
    markup.add(types.InlineKeyboardButton("‚Ü© –ù–∞–∑–∞–¥", callback_data="back_to_menu"))

    bot.send_message(chat_id, "–©–æ —Å–∞–º–µ –∑–≤—ñ—Ç—É—î–º–æ –≤ ¬´–ì–æ—Ç–æ–≤–µ¬ª?", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data == "–≥–æ—Ç–æ–≤–µ_–ø–∏—Ä–æ–≥–∏")
def show_pies_list(call):
    chat_id = call.message.chat.id
    user_states[chat_id] = "–≤–∏–±—ñ—Ä_–ø–∏—Ä–æ–≥–∞"

    markup = types.InlineKeyboardMarkup(row_width=2)
    for emoji, name in pies_list.items():
        markup.add(types.InlineKeyboardButton(f"{emoji} {name}", callback_data=f"–ø–∏—Ä—ñ–≥_{emoji}"))
    markup.add(types.InlineKeyboardButton("‚Ü© –ù–∞–∑–∞–¥", callback_data="–≥–æ—Ç–æ–≤–µ"))

    bot.send_message(chat_id, "–û–±–µ—Ä—ñ—Ç—å –ø–∏—Ä—ñ–≥:", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data.startswith("–ø–∏—Ä—ñ–≥_"))
def ask_pie_quantity(call):
    chat_id = call.message.chat.id
    emoji = call.data.replace("–ø–∏—Ä—ñ–≥_", "")
    user_states[chat_id] = f"–≤–≤–µ–¥–µ–Ω–Ω—è_–∫—ñ–ª—å–∫–æ—Å—Ç—ñ_{emoji}"
    bot.send_message(chat_id, f"–°–∫—ñ–ª—å–∫–∏ —à–º–∞—Ç–∫—ñ–≤ –ø–∏—Ä–æ–≥–∞ {emoji} –∑–∞–ª–∏—à–∏–ª–æ—Å—å?")

@bot.message_handler(func=lambda message: user_states.get(message.chat.id, "").startswith("–≤–≤–µ–¥–µ–Ω–Ω—è_–∫—ñ–ª—å–∫–æ—Å—Ç—ñ_"))
def ask_baking_day(message):
    chat_id = message.chat.id
    state = user_states[chat_id]
    emoji = state.replace("–≤–≤–µ–¥–µ–Ω–Ω—è_–∫—ñ–ª—å–∫–æ—Å—Ç—ñ_", "")
    –∫—ñ–ª—å–∫—ñ—Å—Ç—å = message.text.strip()

    if not –∫—ñ–ª—å–∫—ñ—Å—Ç—å.isdigit():
        bot.send_message(chat_id, "–í–≤–µ–¥—ñ—Ç—å –ª–∏—à–µ —á–∏—Å–ª–æ.")
        return

    user_reports.setdefault(chat_id, {}).setdefault("–≥–æ—Ç–æ–≤–µ", {})[emoji] = {"—à–º–∞—Ç–∫–∏": int(–∫—ñ–ª—å–∫—ñ—Å—Ç—å)}
    user_states[chat_id] = f"–≤–∏–±—ñ—Ä_–¥–∞—Ç–∏_{emoji}"

    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton("–°—å–æ–≥–æ–¥–Ω—ñ", callback_data=f"–¥–∞—Ç–∞_{emoji}_2"),
        types.InlineKeyboardButton("–í—á–æ—Ä–∞", callback_data=f"–¥–∞—Ç–∞_{emoji}_3"),
        types.InlineKeyboardButton("–ü–æ–∑–∞–≤—á–æ—Ä–∞", callback_data=f"–¥–∞—Ç–∞_{emoji}_4")
    )
    bot.send_message(chat_id, "–ö–æ–ª–∏ –±—É–≤ —Å–ø–µ—á–µ–Ω–∏–π —Ü–µ–π –ø–∏—Ä—ñ–≥?", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data.startswith("–¥–∞—Ç–∞_"))
def save_pie_entry(call):
    chat_id = call.message.chat.id
    parts = call.data.split("_")
    emoji = parts[1]
    –¥–µ–Ω—å = parts[2]
    user_reports[chat_id]["–≥–æ—Ç–æ–≤–µ"][emoji]["–¥–µ–Ω—å"] = –¥–µ–Ω—å

    —à–º–∞—Ç–∫–∏ = user_reports[chat_id]["–≥–æ—Ç–æ–≤–µ"][emoji]["—à–º–∞—Ç–∫–∏"]
    –∑–≤—ñ—Ç = f"{emoji} ‚Äî {—à–º–∞—Ç–∫–∏}({–¥–µ–Ω—å})"
    bot.send_message(chat_id, f"–ó–±–µ—Ä–µ–∂–µ–Ω–æ: {–∑–≤—ñ—Ç}")

    show_main_menu(chat_id)

@bot.callback_query_handler(func=lambda call: call.data == "–≥–æ—Ç–æ–≤–µ_–ø–∏—Ä–æ–≥–∏")
def show_pies_list(call):
    chat_id = call.message.chat.id
    user_states[chat_id] = "–≤–∏–±—ñ—Ä_–ø–∏—Ä–æ–≥–∞"

    markup = types.InlineKeyboardMarkup(row_width=2)

    # –ú º—è—Å–Ω—ñ –ø–∏—Ä–æ–≥–∏
    bot.send_message(chat_id, "*–ú º—è—Å–Ω—ñ –ø–∏—Ä–æ–≥–∏:*", parse_mode='Markdown')
    markup.add(
        types.InlineKeyboardButton("üçóüçÖüßÄ –ö—É—Ä–∫–∞-—Ç–æ–º–∞—Ç–∏-—Å–∏—Ä", callback_data="–ø–∏—Ä—ñ–≥_üçóüçÖüßÄ"),
        types.InlineKeyboardButton("üçóüççüßÄ –ö—É—Ä–∫–∞-–∞–Ω–∞–Ω–∞—Å-—Å–∏—Ä", callback_data="–ø–∏—Ä—ñ–≥_üçóüççüßÄ"),
        types.InlineKeyboardButton("üçóüçÑüßÄ –ö—É—Ä–∫–∞-–≥—Ä–∏–±–∏-—Å–∏—Ä", callback_data="–ø–∏—Ä—ñ–≥_üçóüçÑüßÄ"),
        types.InlineKeyboardButton("üêÑüßÄ –¢–µ–ª—è—Ç–∏–Ω–∞-—Å–∏—Ä", callback_data="–ø–∏—Ä—ñ–≥_üêÑüßÄ"),
        types.InlineKeyboardButton("ü¶Éü´ë –Ü–Ω–¥–∏–∫-—Å–æ–ª–æ–¥–∫–∏–π –ø–µ—Ä–µ—Ü—å", callback_data="–ø–∏—Ä—ñ–≥_ü¶Éü´ë")
    )
    bot.send_message(chat_id, ".", parse_mode='Markdown')

    # –ù–µ–º º—è—Å–Ω—ñ –ø–∏—Ä–æ–≥–∏
    bot.send_message(chat_id, "*–ù–µ–º º—è—Å–Ω—ñ –ø–∏—Ä–æ–≥–∏:*", parse_mode='Markdown')
    markup.add(
        types.InlineKeyboardButton("üßÖ –¶–∏–±—É–ª–µ–≤–∏–π", callback_data="–ø–∏—Ä—ñ–≥_üßÖ"),
        types.InlineKeyboardButton("üçÑüßÄ –ì—Ä–∏–±–∏-—Å–∏—Ä", callback_data="–ø–∏—Ä—ñ–≥_üçÑüßÄ"),
        types.InlineKeyboardButton("üßÄüçÉ –°–∏—Ä-—à–ø–∏–Ω–∞—Ç", callback_data="–ø–∏—Ä—ñ–≥_üßÄüçÉ"),
        types.InlineKeyboardButton("üßÄ –°—ñ–º —Å–∏—Ä—ñ–≤", callback_data="–ø–∏—Ä—ñ–≥_üßÄ")
    )
    bot.send_message(chat_id, ".", parse_mode='Markdown')

    # –°–æ–ª–æ–¥–∫—ñ –ø–∏—Ä–æ–≥–∏
    bot.send_message(chat_id, "*–°–æ–ª–æ–¥–∫—ñ –ø–∏—Ä–æ–≥–∏:*", parse_mode='Markdown')
    markup.add(
        types.InlineKeyboardButton("üçíü´ê –í–∏—à–Ω—è-–ª–æ—Ö–∏–Ω–∞", callback_data="–ø–∏—Ä—ñ–≥_üçíü´ê"),
        types.InlineKeyboardButton("üçíüßÄ –í–∏—à–Ω—è-—Å–∏—Ä", callback_data="–ø–∏—Ä—ñ–≥_üçíüßÄ")
    )

    # –í—ñ–¥—Å—Ç—É–ø + –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è
    bot.send_message(chat_id, " ", parse_mode='Markdown')
    markup.add(types.InlineKeyboardButton("üîö –ó –ø–∏—Ä–æ–≥–∞–º–∏ ‚Äî –≤—Å–µ", callback_data="–≥–æ—Ç–æ–≤–µ"))

    bot.send_message(chat_id, "–û–±–µ—Ä—ñ—Ç—å –ø–∏—Ä—ñ–≥:", reply_markup=markup)
